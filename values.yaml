# Default values for shopware-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  registry: docker.io
  repository: shyim/shopware
  pullPolicy: IfNotPresent
  tag: "6.3.0.0-dev"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

## An array to add extra environment variables
## For example:
## extraEnvVars:
##  - name: TZ
##    value: "Europe/Paris"
##
extraEnvVars:

shopware:
  appEnv: "prod"
  instanceId: ""
  appUrl: ""
  appSecret: ""
  databaseHost: ""
  databaseUrl: ""
  mailerUrl: "null://localhost"
  activePlugins: ""
  consumer:
    enabled: true
    replicaCount: 1
  scheduledTask:
    enabled: true
    replicaCount: 1
  install:
    locale: "en-GB"
    currency: "EUR"
    adminUsername: "admin"
    adminPassword: "shopware"
  elasticSearch:
    hosts: "elasticsearch-master"
    enabled: false
    indexingEnabled: false
    indexPrefix: ''
  httpCache:
    enabled: true
    defaultTtl: 7200
  admin:
    disableWorker: true
  cache:
    adapter: "redis"
    host: "redis-master"
    port: 6379
    database: 0
  session:
    adapter: "redis"
    host: "redis-master"
    port: 6379
    database: 1
  php:
    timeZone: "Europe/Berlin"
    maxUploadSize: "128m"
    maxExecutionTime: "300"
    memoryLimit: "512m"
    fpm:
      pm: "dynamic"
      maxChildren: "5"
      startServers: "2"
      minSpareServers: "1"
      maxSpareServers: "3"
  customConfig: ''

configPersistence:
  accessModes:
    - ReadWriteOnce
  size: 512M
  storageClassName: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: localhost
      paths: ['/']
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}
tolerations: []
affinity: {}

mysql:
  ## Disable MySQL replication
  replication:
    enabled: true

  db:
    name: shopware

  root:
    password: shopware

  master:
    config: |-
      [mysqld]
      default_authentication_plugin=mysql_native_password
      skip-name-resolve
      explicit_defaults_for_timestamp
      basedir=/opt/bitnami/mysql
      plugin_dir=/opt/bitnami/mysql/plugin
      port=3306
      socket=/opt/bitnami/mysql/tmp/mysql.sock
      datadir=/bitnami/mysql/data
      tmpdir=/opt/bitnami/mysql/tmp
      max_allowed_packet=16M
      bind-address=0.0.0.0
      pid-file=/opt/bitnami/mysql/tmp/mysqld.pid
      log-error=/opt/bitnami/mysql/logs/mysqld.log
      character-set-server=utf8mb4
      collation-server=utf8mb4_general_ci
      [client]
      port=3306
      socket=/opt/bitnami/mysql/tmp/mysql.sock
      default-character-set=UTF8
      plugin_dir=/opt/bitnami/mysql/plugin
      [manager]
      port=3306
      socket=/opt/bitnami/mysql/tmp/mysql.sock
      pid-file=/opt/bitnami/mysql/tmp/mysqld.pid
    persistence:
      enabled: false
      ## MySQL data Persistent Volume Storage Class
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
      ##   GKE, AWS & OpenStack)
      ##
      # storageClass: "-"
      accessMode: ReadWriteOnce
      size: 1Gi

elasticsearch:
  enabled: true

redis:
  usePassword: false